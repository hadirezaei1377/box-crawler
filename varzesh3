package main

import (
	"fmt"

	"github.com/gocolly/colly"
)

func main() {
	// db, err := database.New("mongodb://root:example@localhost:27017/default_db?authSource=admin")
	// if err != nil {
	// 	fmt.Println(err)
	// }

	// initializing cron jobs
	//      get data
	//      process data and clean up data
	//      store data

	// for gocolly
	c := colly.NewCollector(
		colly.AllowedDomains("www.varzesh3.com"),
	)

	// c.OnHTML("upcoming-fights-schedule", "fight-results", func(e *colly.HTMLElement) {
	// 	metaTags := e.DOM.ParentsUntil("~").Find("meta")
	// 	metaTags.Each(func(_ int, s *goquery.Selection) {

	// 	})
	// })
	c.OnHTML("#page > div > div > div.matches-holder", func(container *colly.HTMLElement) {
		container.ForEach("div", func(i int, h *colly.HTMLElement) {
			matchHost := 
			fmt.Println("Host:  ", matchHost)
			fmt.Println("Guest: ", h.ChildText("div.fixture-result-match > a.fixture-result-match-teams > div.fixture-result-match-guest > span"))
			fmt.Println("Time:  ", h.ChildText("div.fixture-result-match > a.fixture-result-match-time.livescore-time > time"))
			fmt.Println("----------")
			return Match{
				host: h.ChildText("div.fixture-result-match > a.fixture-result-match-teams > div.fixture-result-match-host > span"),
				gus
			}
		})
		// container.ForEach("div:nth-child(2) > div.fixture-result-match > a.fixture-result-match-teams > div.fixture-result-match-guest > span", func(i int, h *colly.HTMLElement) {
		// 	fmt.Println(h.Text)
		// })

		//       nth-child(2) > div.fixture-result-match > a.fixture-result-match-time.livescore-time > time
		//       nth-child(2) > div.fixture-result-match > a.fixture-result-match-teams > div.fixture-result-match-host > span
		//       nth-child(2) > div.fixture-result-match > a.fixture-result-match-teams > div.fixture-result-match-guest > span
		// div > nth-child(3) > div.fixture-result-match > a.fixture-result-match-teams > div.fixture-result-match-guest > span
		// div:nth-child(2) > div.fixture-result-match > a.fixture-result-match-teams > div.fixture-result-match-guest > span
		// e.ForEach("a[href]", func(i int, h *colly.HTMLElement) {
		// body.ForEach("a[href]", func(i int, element *colly.HTMLElement) {

		// })
		// })
	})
	//

	// c.OnRequest(func(r *colly.Request) {
	// 	fmt.Println("Crawl on page", r.URL.String())
	// })

	if err := c.Visit("https://www.varzesh3.com/livescore"); err != nil {
		fmt.Println("visiting error: ", err)
	}

	// scheduler := gocron.NewScheduler(time.UTC)
	// scheduler.Every(3600).Second().Do(scrappers.ScrapeFightResults, db)

	/*
		c := colly.NewCollector(
			colly.AllowedDomains("https://box.live/fight-results"),
		)

		scheduler := gocron.NewScheduler(time.UTC)
		scheduler.Every(3600).Second().Do(scrappers.ScrapeFightResults, db)

		router := server.New(db)
		router.RegisterRoutes()
		if err := router.Start(); err != nil {
			log.Fatal(err)
		}

		c.OnCSS(".mw-parser-output", func(e *colly.CSSElement) {
			links := e.ChildAttrs("a", "href")
			fmt.Println(links)
		})
		c.Visit("https://box.live/fight-results/Web_scraping")
	*/
}
